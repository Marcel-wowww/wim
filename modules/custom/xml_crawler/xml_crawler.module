<?php

/**
 * @file
 * Code for the XML Crawler.
 */

module_load_include('inc', 'xml_crawler');

/**
 * Implements hook_external_crawler_save_site_alter().
 */
function xml_crawler_external_crawler_save_site_alter(&$site, $fields) {
  if (isset($fields['is_xml'], $fields['xml_type']) && $fields['is_xml'] && $fields['xml_type']) {
    $site->is_xml = $fields['is_xml'];
    $site->xml_type = $fields['xml_type'];
    $site->max_depth = 1;
  }
}

/**
 * Implements hook_wimbase_result_source_site_alter().
 */
function xml_crawler_wimbase_result_source_site_alter($result_link, &$variables) {

  $fields = $variables['result']['fields'];

  if ($fields['entity_type'] === 'external_crawler' && !empty($fields['entity_id'])) {
    if (_xml_crawler_get_xml_type($fields['entity_id']) === 'cvdr') {
      // Alter source url.
      $parsed_url = parse_url($result_link);
      $source_url = $parsed_url['scheme'] . '://' . $parsed_url['host'];
      $variables['source'] = l($source_url, $result_link, [
        'absolute' => TRUE,
        'attributes' => [
          'class' => ['source'],
        ],
      ]);
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function xml_crawler_form_alter(&$form, &$form_state, $form_id) {
  // Add checkbox for XML marker.
  if ($form_id === 'external_crawler_site_edit_form' || $form_id === 'external_crawler_site_add_form') {
    $date_token = '[current-date:custom:d-m-Y]';

    $form['name']['#weight'] = -10;
    $form['url']['#weight'] = -9;
    $form['is_xml'] = [
      '#type' => 'checkbox',
      '#title' => t('Is XML'),
      '#description' => t('This site contain XML page. Note, to use a current date just need to replace a static date with following token: <b>!date_token</b> in the URL field. For example: https://example.nl/sru/Search?version=1.2&uitwerkingtredingDatum < !date_token and the date will be formatted like: !current_date.', ['!date_token' => $date_token, '!current_date' => token_replace($date_token)]),
      '#weight' => -8,
      '#default_value' => isset($form_state['site']->is_xml) ? $form_state['site']->is_xml : 0,
    ];

    $form['max_depth']['#states'] = [
      'invisible' => [
        ':input[name="is_xml"]' => ['checked' => TRUE],
      ],
    ];

    $form['xml_type'] = [
      '#type' => 'select',
      '#title' => t('XML type'),
      '#weight' => -7,
      '#options' => _xml_crawler_get_xml_types(),
      '#default_value' => isset($form_state['site']->xml_type) ? $form_state['site']->xml_type : NULL,
      '#states' => [
        'visible' => [
          ':input[name="is_xml"]' => ['checked' => TRUE],
        ],
        'required' => [
          ':input[name="is_xml"]' => ['checked' => TRUE],
        ],
      ],
    ];
  }

}

/**
 * Implements hook_cron().
 */
function xml_crawler_cron() {

  $sites = db_select('external_crawler_site', 's')
    ->fields('s')
    ->condition('s.is_xml', '1')
    ->execute()
    ->fetchAll();

  if ($sites) {
    foreach ($sites as $site) {
      if ($site->last_crawl <= time() - $site->check_interval) {
        _xml_crawler_crawle_xml($site);
        // Update last crawl date.
        _external_crawler_update_site_date($site);
      }
    }
  }
}

/**
 * Implements hook_cronapi().
 */
function xml_crawler_cronapi($op, $job = NULL) {
  // Run every hour.
  $items['xml_crawler_cron'] = [
    'description' => 'Run XML Crawler',
    'rule' => '0 */1 * * *',
  ];

  return $items;
}
